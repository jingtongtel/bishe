<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/jee
			http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/aop
           	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 引入jdbc配置文件 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="classpath:jdbc.properties" /> </bean> -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 自动扫描(自动注入)，扫描这个包以及它的子包的所有使用@Service注解标注的类 -->
	<context:component-scan base-package="com.boco.mbd.service,com.boco.human" />

	<!-- 启用CGliB -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 数据源配置 -->
	<bean id="dataSource_oracle" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<bean id="dynamicDataSource" class="com.boco.mbd.common.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<!-- oracle数据源 -->
				<entry key="ds_1" value-ref="dataSource_oracle" />
				<!-- mysql数据源 for example -->
				<entry key="ds_2" value-ref="dataSource_oracle" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_oracle" />
	</bean>

	<bean name="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<!-- <property name="configLocation" value="classpath*:mybatis.xml" /> -->
		<!-- <property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				<property name="mapUnderscoreToCamelCase" value="true" />
			</bean>
		</property> -->
		<property name="mapperLocations" value="classpath*:mapping/*.xml" />
	</bean>

	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.boco.mbd.mapper,com.boco.human" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<!--配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 对增、删、改方法进行事务支持 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<!-- 对查找方法进行只读事务 -->
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<!-- 对其它方法进行只读事务 -->
			<!--<tx:method name="*" propagation="SUPPORTS" read-only="true" /> -->
		</tx:attributes>
	</tx:advice>
	<!--开启注解式事务扫描 要开启事务的service实现类中 加上@Transactional注解 -->
	<tx:annotation-driven />

</beans>